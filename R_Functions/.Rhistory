df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$CTB=='Neg',][yname]))
df_P4.t <- t.test(df_P4_Pos,df_P4_Neg,alternative='greater',paired=TRUE)
print(df_P4.t)
df_P4.t <- t.test(df_P4_Pos,df_P4_Neg,paired=TRUE)
print(df_P4.t)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$CTB=='Pos',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$CTB=='Neg',][yname]))
df_P8.t <- t.test(df_P8_Pos,df_P8_Neg,alternative='greater',paired=TRUE)
print(df_P8.t)
df_P8.t <- t.test(df_P8_Pos,df_P8_Neg,paired=TRUE)
print(df_P8.t)
}
if (groupname=="Type"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$Type=='Orig',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$Type=='Rand',][yname]))
df_P2.t <- t.test(df_P2_Pos,df_P2_Neg,alternative='greater',paired=TRUE)
print(df_P2.t)
df_P2.t <- t.test(df_P2_Pos,df_P2_Neg,paired=TRUE)
print(df_P2.t)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$Type=='Orig',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$Type=='Rand',][yname]))
df_P4.t <- t.test(df_P4_Pos,df_P4_Neg,alternative='greater',paired=TRUE)
print(df_P4.t)
df_P4.t <- t.test(df_P4_Pos,df_P4_Neg,paired=TRUE)
print(df_P4.t)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$Type=='Orig',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$Type=='Rand',][yname]))
df_P8.t <- t.test(df_P8_Pos,df_P8_Neg,alternative='greater',paired=TRUE)
print(df_P8.t)
df_P8.t <- t.test(df_P8_Pos,df_P8_Neg,paired=TRUE)
print(df_P8.t)
}
}
Comp_CTB_at_each_Age_conf_int <- function(df,yname,groupname){
df_P2 <- get_df_P2(df)
df_P4 <- get_df_P4(df)
df_P8 <- get_df_P8(df)
#
if (groupname=="CTB"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$CTB=='Pos',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$CTB=='Neg',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$CTB=='Pos',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$CTB=='Neg',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$CTB=='Pos',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$CTB=='Neg',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
print(df_P8_Pos.t$conf.int)
df_P8_Neg.t <- t.test(df_P8_Neg)
print("P8_Neg")
print(df_P8_Neg.t$conf.int)
}
if (groupname=="Type"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$Type=='Orig',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$Type=='Rand',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$Type=='Orig',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$Type=='Rand',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$Type=='Orig',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$Type=='Rand',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
tryCatch({
print(df_P8_Pos.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
return("Error: Data are essentially constant. Skipping t-test.")
} else {
return(paste("Error: ", e$message))
}
})
df_P8_Neg.t <- t.test(df_P8_Neg)
print("P8_Neg")
tryCatch({
print(df_P8_Neg.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
return("Error: Data are essentially constant. Skipping t-test.")
} else {
return(paste("Error: ", e$message))
}
})
}
}
Comp_CTB_at_each_Age <- function(df,yname,groupname){
df_WT <- get_df_WT(df)
df_B2 <- get_df_B2(df)
print_title("Wild-type, ANOVA for all ages")
Comp_CTB_at_each_Age_ANOVA(df_WT,yname,groupname)
print_end()
print_title("Wild-type, paired_t_test for all ages, 2-sided then greater")
Comp_CTB_at_each_Age_pairedT(df_WT,yname,groupname)
print_end()
print_title("Wild-type, confidence interval for all ages")
Comp_CTB_at_each_Age_conf_int(df_WT,yname,groupname)
print_end()
print_title("B2KO, ANOVA for all ages")
Comp_CTB_at_each_Age_ANOVA(df_B2,yname,groupname)
print_end()
print_title("B2KO, paired_t_test for all ages, 2-sided then greater")
Comp_CTB_at_each_Age_pairedT(df_B2,yname,groupname)
print_end()
print_title("B2KO, confidence interval for all ages")
Comp_CTB_at_each_Age_conf_int(df_B2,yname,groupname)
print_end()
}
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/",sep="")
filename <- paste(raw_folder,"Pos_multi_1.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_1.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_2.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_2.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_3.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_3.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_4.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_4.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
Comp_CTB_at_each_Age_conf_int <- function(df,yname,groupname){
df_P2 <- get_df_P2(df)
df_P4 <- get_df_P4(df)
df_P8 <- get_df_P8(df)
#
if (groupname=="CTB"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$CTB=='Pos',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$CTB=='Neg',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$CTB=='Pos',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$CTB=='Neg',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$CTB=='Pos',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$CTB=='Neg',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
print(df_P8_Pos.t$conf.int)
df_P8_Neg.t <- t.test(df_P8_Neg)
print("P8_Neg")
print(df_P8_Neg.t$conf.int)
}
if (groupname=="Type"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$Type=='Orig',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$Type=='Rand',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$Type=='Orig',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$Type=='Rand',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$Type=='Orig',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$Type=='Rand',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
tryCatch({
print(df_P8_Pos.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
df_P8_Neg.t <- t.test(df_P8_Neg)
print("P8_Neg")
tryCatch({
print(df_P8_Neg.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
}
}
Comp_CTB_at_each_Age <- function(df,yname,groupname){
df_WT <- get_df_WT(df)
df_B2 <- get_df_B2(df)
print_title("Wild-type, ANOVA for all ages")
Comp_CTB_at_each_Age_ANOVA(df_WT,yname,groupname)
print_end()
print_title("Wild-type, paired_t_test for all ages, 2-sided then greater")
Comp_CTB_at_each_Age_pairedT(df_WT,yname,groupname)
print_end()
print_title("Wild-type, confidence interval for all ages")
Comp_CTB_at_each_Age_conf_int(df_WT,yname,groupname)
print_end()
print_title("B2KO, ANOVA for all ages")
Comp_CTB_at_each_Age_ANOVA(df_B2,yname,groupname)
print_end()
print_title("B2KO, paired_t_test for all ages, 2-sided then greater")
Comp_CTB_at_each_Age_pairedT(df_B2,yname,groupname)
print_end()
print_title("B2KO, confidence interval for all ages")
Comp_CTB_at_each_Age_conf_int(df_B2,yname,groupname)
print_end()
}
#Print_Utility Func
print_title <- function(stri){
print(stri)
print("---------")
}
outfile <- paste(raw_folder,"Fig.S3_pospos_4.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
filename <- paste(raw_folder,"Pos_multi_4.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_4.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
df_WT <- get_df_WT(df)
df<-df
df<-df_WT
df_P2 <- get_df_P2(df)
df_P4 <- get_df_P4(df)
df_P8 <- get_df_P8(df)
sink(NULL)
print("P8_Pos")
print(df_P8_Pos.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$CTB=='Pos',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$CTB=='Neg',][yname]))
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$Type=='Orig',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$Type=='Rand',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
df_P8_Pos
sink(NULL)
df_P8_Pos
df
sink(NULL)
df
df
sink(NULL)
df
sink(NULL)
df
df_P8_Pos
df_P8_Pos.t <- t.test(df_P8_Pos)
tryCatch({
print(df_P8_Pos.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
df_P8_Neg.t <- t.test(df_P8_Neg)
tryCatch({
print(df_P8_Neg.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
Comp_CTB_at_each_Age_conf_int <- function(df,yname,groupname){
df_P2 <- get_df_P2(df)
df_P4 <- get_df_P4(df)
df_P8 <- get_df_P8(df)
#
if (groupname=="CTB"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$CTB=='Pos',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$CTB=='Neg',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$CTB=='Pos',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$CTB=='Neg',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$CTB=='Pos',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$CTB=='Neg',][yname]))
df_P8_Pos.t <- t.test(df_P8_Pos)
print("P8_Pos")
print(df_P8_Pos.t$conf.int)
df_P8_Neg.t <- t.test(df_P8_Neg)
print("P8_Neg")
print(df_P8_Neg.t$conf.int)
}
if (groupname=="Type"){
df_P2_Pos <- as.numeric(unlist(df_P2[df_P2$Type=='Orig',][yname]))
df_P2_Neg <- as.numeric(unlist(df_P2[df_P2$Type=='Rand',][yname]))
df_P2_Pos.t <- t.test(df_P2_Pos)
print("P2_Pos")
print(df_P2_Pos.t$conf.int)
df_P2_Neg.t <- t.test(df_P2_Neg)
print("P2_Neg")
print(df_P2_Neg.t$conf.int)
df_P4_Pos <- as.numeric(unlist(df_P4[df_P4$Type=='Orig',][yname]))
df_P4_Neg <- as.numeric(unlist(df_P4[df_P4$Type=='Rand',][yname]))
df_P4_Pos.t <- t.test(df_P4_Pos)
print("P4_Pos")
print(df_P4_Pos.t$conf.int)
df_P4_Neg.t <- t.test(df_P4_Neg)
print("P4_Neg")
print(df_P4_Neg.t$conf.int)
df_P8_Pos <- as.numeric(unlist(df_P8[df_P8$Type=='Orig',][yname]))
df_P8_Neg <- as.numeric(unlist(df_P8[df_P8$Type=='Rand',][yname]))
print("P8_Pos")
tryCatch({
df_P8_Pos.t <- t.test(df_P8_Pos)
print(df_P8_Pos.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
print("P8_Neg")
tryCatch({
df_P8_Neg.t <- t.test(df_P8_Neg)
print(df_P8_Neg.t$conf.int)
}, error = function(e) {
if (grepl("data are essentially constant", e$message)) {
print("Error: Data are essentially constant. Skipping t-test.")
} else {
print(paste("Error: ", e$message))
}
})
}
}
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/",sep="")
filename <- paste(raw_folder,"Pos_multi_1.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_1.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_2.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_2.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_3.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_3.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
filename <- paste(raw_folder,"Pos_multi_4.0.csv",sep="")
df <- read.csv(filename)
yname <- "Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_pospos_4.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_Neg_simp_neg_1.0/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_negneg_1.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_Neg_simp_neg_2.0/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_negneg_2.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_Neg_simp_neg_3.0/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_negneg_3.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_Neg_simp_neg_4.0/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_negneg_4.0.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_neg_simp_pos_1.5/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_negpos_1.5.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig. S3/Comp_pos_simp_neg_1.5/",sep="")
filename <- paste(raw_folder,"Raw_Simp.xlsx",sep="")
df <- read_excel(filename)
yname <- "Num_Simp_Near_Ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"Fig.S3_posneg_1.5.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
{
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig.S4/",sep="")
filename <- paste(raw_folder,"S4.csv",sep="")
df <- read.csv(filename)
yname <- "Clustered_ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"S4.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
}
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig.S4/",sep="")
filename <- paste(raw_folder,"S4.csv",sep="")
df <- read.csv(filename)
df<-df[df$CTB=='Pos',]
yname <- "Clustered_ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"S4_pos.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
raw_folder <- paste(project_directory,"Data/Experiment_8/8_6_Statistics/Fig.S4/",sep="")
filename <- paste(raw_folder,"S4.csv",sep="")
df <- read.csv(filename)
df<-df[df$CTB=='Neg',]
yname <- "Clustered_ratio"
groupname <- "Type"
outfile <- paste(raw_folder,"S4_neg.txt")
sink(file=outfile)
Comp_CTB_at_each_Age(df,yname,groupname)
sink(NULL)
